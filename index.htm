<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="css/style.css">
  <link rel="stylesheet" href="css/variables.css">
  <style type="text/css">
  #introduction-section {
    /* background-image: url('/assets/graphics/bg@2x.png');
    background-attachment: fixed;
    /* // height: 100%; */
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
  }

  #get-components-section {
    /* background-image: url('/assets/graphics/bg-left@2x.png'); */
    /* background-color: black; */
    background-attachment: fixed;
    /* // height: 100%; */
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
  }
  </style>
  <title>AppSite</title>
</head>
<body>
  <div id="header">
      <a href="index.htm" id="overview" class="option">
        overview
      </a>
      <a href="#" id="components" class="option">
        components
      </a>
      <a href="https://www.github.com/yashsehgal/appsite-web" id="github" class="option">
        github
      </a>
  </div>

  <div id="introduction-section">
    <p id="introduction-headline">
      Get web & UI components<br />for free
    </p>
    <p id="description-text">
      AppSite will help you with pre-designed web components and UI Designs
    </p>

    <a href="#" download>
      <img src="assets/buttons/mainDownloadButton.svg" alt="downloadProject" id="mainDownloadButton" class="button">
    </a>
  </div>

  <div id="get-components-section">
    <p id="get-components-headline">
      Get web-based components
    </p>

    <div id="card-demo-flex" class="flex-container">
      <div id="selection-demo" class="card-demo">
        <img src="assets/cards/demoComponent01.svg" alt="card-01" id="card-01" class="card">
      </div>
      <div id="copy-code-demo" class="card-demo">
        <img src="assets/cards/demoComponent02.svg" alt="card-02" id="card-02" class="card">
      </div>
      <div id="usage-demo" class="card-demo">
        <img src="assets/cards/demoComponent03.svg" alt="card-03" id="card-03" class="card">
      </div>
    </div>
  </div>

  <div class="component-animation">

  </div>

  <div id="footer">

  </div>
  <script>
    var options = {
      imgSrc1: "...",
      imgSrc2: "...",
      containerName : "component-animation",
      columns:16,
      margin:3
    }


    function VenetianBlinds(defaults) {
      var cols = defaults.columns;
      var margin = defaults.margin;
      var img1 = defaults.imgSrc1;
      var img2 = defaults.imgSrc2;
      var placeholder = document.getElementsByClassName(defaults.containerName)[0];
      var directionX, directionY;
      
      var column, blind, blindImg;
      var bgImg, rot;
      var colL;
      var colW = (placeholder.offsetWidth / cols) - margin;
      for (var i=0; i < cols; i++)
        {
          colL = ((colW + margin) * i);
          
          column = document.createElement('div');
          column.className = "column";
          column.style.width = colW + "px";
          column.style.left = colL + "px";
          placeholder.appendChild(column); 
          
          for (var j=0; j<4; j++)
            {
              blind = document.createElement('div');
              blind.className = "blind";
              blind.style.width = colW + "px";
              blindImg = document.createElement('div');
              blindImg.className = "blindImg";
              
              switch (j){
                case 0:
                    TweenMax.set(blind, {rotationY: "0"});
                    bgImg = img1;
                    break;
                case 1:
                    TweenMax.set(blind, {rotationY: "90"});
                    bgImg = img2;
                    break;
                case 2: 
                      TweenMax.set(blind, {rotationY: "180"});
                      bgImg = img1;
                      break;              
                  case 3:
                      TweenMax.set(blind, {rotationY: "270"});
                      bgImg = img2;
                      break;
              }
              blindImg.style.width = placeholder.offsetWidth + "px";
              blindImg.style.backgroundImage = "url("+bgImg+")";
              blindImg.style.left = -colL + "px";

              column.appendChild(blind);
              blind.appendChild(blindImg);
              
              TweenMax.set(blind, { transformOrigin:"50% 50% " + -colW/2, transformStyle: "preserve-3d"});
            }
          
          TweenMax.set(column, {transformStyle:"preserve-3d", transformPerspective:1000, rotationY:0});
          
          column.addEventListener("mouseenter", function(event){
                var elem = event.currentTarget;
                var rotY = elem._gsTransform.rotationY;
            
                if(directionX > 0){
                  TweenMax.to(elem, 1, {rotationY:Math.floor(rotY/90)*90+90, transformOrigin:"50% 50% -" + colW/2, ease:Back.easeOut});
                }else{
                  TweenMax.to(elem, 1, {rotationY:Math.floor(rotY/90)*90-90, transformOrigin:"50% 50% -" + colW/2, ease:Back.easeOut});
                }
          })
        }
          document.addEventListener('mousemove', function (event) {
          directionX = event.movementX || event.mozMovementX || event.webkitMovementX || 0;
          directionY = event.movementY || event.mozMovementY || event.webkitMovementY || 0;
        });
}

VenetianBlinds(options);
  </script>
</body>
</html>